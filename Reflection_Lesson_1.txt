How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Seeing the revisions I've done to the same file at two points in time helps me identify errors in my code.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It'll help gauge my skill based on how and how quickly I resolve issues and hopefully, with time, improve my judgment call (of when best to commit).

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: A more logical commit
    Cons: Prone to user error

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It's useful for coding since programs usually involve a large sum of interrelated files.

How can you use the commands git log and git diff to view the history of files?

    git log: Use to find specific commits in the repository
    git diff: Use to find the changes (added, deleted) between two commits

How might using version control make you more confident to make changes that
could break something?

    I could go back to the previous versions of commits so it does make me bolder in making big changes to the code.

Now that you have your workspace set up, what do you want to try using Git for?

    Future projects
